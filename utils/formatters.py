def format_movies_list(movies, lang='uk'):
    """–§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É —Ñ—ñ–ª—å–º—ñ–≤"""
    header = {
        'uk': "üèÜ –¢–æ–ø —Ñ—ñ–ª—å–º—ñ–≤:\n\n",
        'ru': "üèÜ –¢–æ–ø —Ñ–∏–ª—å–º–æ–≤:\n\n",
        'en': "üèÜ Top movies:\n\n"
    }.get(lang, "")
    items = []
    for movie in movies[:10]:
        title = movie.get('title', '–ù–µ–≤—ñ–¥–æ–º–æ')
        original_title = movie.get('original_title', title)
        year = movie.get('release_date', '')[:4] if movie.get('release_date') else '–ù–µ–≤—ñ–¥–æ–º–æ'
        rating = movie.get('vote_average', 0)
        genres = ", ".join([g['name'] for g in movie.get('genres', [])[:2]]) or '–ù–µ–≤—ñ–¥–æ–º–æ'
        item = f"üé¨ <b>{title}</b> ({original_title})\n"
        item += f"üìÖ {year} | ‚≠ê {rating}/10 | üé≠ {genres}\n"
        item += f"üîó /movie_{movie['id']}\n"
        items.append(item)
    return header + "\n".join(items)

def format_tv_shows_list(tv_shows, lang='uk'):
    """–§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É —Å–µ—Ä—ñ–∞–ª—ñ–≤"""
    header = {
        'uk': "üì∫ –¢–æ–ø —Å–µ—Ä—ñ–∞–ª—ñ–≤:\n\n",
        'ru': "üì∫ –¢–æ–ø —Å–µ—Ä–∏–∞–ª–æ–≤:\n\n",
        'en': "üì∫ Top TV shows:\n\n"
    }.get(lang, "")
    items = []
    for show in tv_shows[:10]:
        title = show.get('name', '–ù–µ–≤—ñ–¥–æ–º–æ')
        original_title = show.get('original_name', title)
        year = show.get('first_air_date', '')[:4] if show.get('first_air_date') else '–ù–µ–≤—ñ–¥–æ–º–æ'
        rating = show.get('vote_average', 0)
        genres = ", ".join([g['name'] for g in show.get('genres', [])[:2]]) or '–ù–µ–≤—ñ–¥–æ–º–æ'
        item = f"üì∫ <b>{title}</b> ({original_title})\n"
        item += f"üìÖ {year} | ‚≠ê {rating}/10 | üé≠ {genres}\n"
        item += f"üîó /tv_{show['id']}\n"
        items.append(item)
    return header + "\n".join(items)

def format_search_results(results, lang='uk'):
    """–§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ø–æ—à—É–∫—É"""
    header = {
        'uk': "üîç –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É:\n\n",
        'ru': "üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:\n\n",
        'en': "üîç Search results:\n\n"
    }.get(lang, "")
    items = []
    for item in results[:5]:
        if item['media_type'] == 'movie':
            title = item.get('title', '–ù–µ–≤—ñ–¥–æ–º–æ')
            original_title = item.get('original_title', title)
            year = item.get('release_date', '')[:4] if item.get('release_date') else '–ù–µ–≤—ñ–¥–æ–º–æ'
            item_type = {
                'uk': "–§—ñ–ª—å–º",
                'ru': "–§–∏–ª—å–º",
                'en': "Movie"
            }.get(lang, "Movie")
            prefix = "üé¨"
            command = f"/movie_{item['id']}"
        else:
            title = item.get('name', '–ù–µ–≤—ñ–¥–æ–º–æ')
            original_title = item.get('original_name', title)
            year = item.get('first_air_date', '')[:4] if item.get('first_air_date') else '–ù–µ–≤—ñ–¥–æ–º–æ'
            item_type = {
                'uk': "–°–µ—Ä—ñ–∞–ª",
                'ru': "–°–µ—Ä–∏–∞–ª",
                'en': "TV Show"
            }.get(lang, "TV Show")
            prefix = "üì∫"
            command = f"/tv_{item['id']}"
        rating = item.get('vote_average', 0)
        result_item = f"{prefix} <b>{title}</b> ({original_title}) - {item_type}\n"
        result_item += f"üìÖ {year} | ‚≠ê {rating}/10\n"
        result_item += f"üîó {command}\n"
        items.append(result_item)
    return header + "\n".join(items)

def format_movie_details(movie, lang='uk'):
    """–§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ñ—ñ–ª—å–º—É"""
    title = movie.get('title', '–ù–µ–≤—ñ–¥–æ–º–æ')
    original_title = movie.get('original_title', title)
    year = movie.get('release_date', '')[:4] if movie.get('release_date') else '–ù–µ–≤—ñ–¥–æ–º–æ'
    rating = movie.get('vote_average', 0)
    genres = ", ".join([g['name'] for g in movie.get('genres', [])]) or '–ù–µ–≤—ñ–¥–æ–º–æ'
    overview = movie.get('overview', 
                        '–û–ø–∏—Å –≤—ñ–¥—Å—É—Ç–Ω—ñ–π.' if lang == 'uk' else 
                        '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.' if lang == 'ru' else 
                        'No overview available.')
    response = f"üé¨ <b>{title}</b> ({original_title})\n\n"
    response += f"üìÖ <b>{'–†—ñ–∫' if lang == 'uk' else '–ì–æ–¥' if lang == 'ru' else 'Year'}:</b> {year}\n"
    response += f"‚≠ê <b>{'–†–µ–π—Ç–∏–Ω–≥' if lang in ['uk', 'ru'] else 'Rating'}:</b> {rating}/10\n"
    response += f"üé≠ <b>{'–ñ–∞–Ω—Ä–∏' if lang in ['uk', 'ru'] else 'Genres'}:</b> {genres}\n\n"
    response += f"üìñ <b>{'–û–ø–∏—Å' if lang == 'uk' else '–û–ø–∏—Å–∞–Ω–∏–µ' if lang == 'ru' else 'Overview'}:</b>\n{overview}\n\n"
    return response

def format_tv_show_details(tv_show, lang='uk'):
    """–§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Å–µ—Ä—ñ–∞–ª—É"""
    title = tv_show.get('name', '–ù–µ–≤—ñ–¥–æ–º–æ')
    original_title = tv_show.get('original_name', title)
    year = tv_show.get('first_air_date', '')[:4] if tv_show.get('first_air_date') else '–ù–µ–≤—ñ–¥–æ–º–æ'
    rating = tv_show.get('vote_average', 0)
    genres = ", ".join([g['name'] for g in tv_show.get('genres', [])]) or '–ù–µ–≤—ñ–¥–æ–º–æ'
    overview = tv_show.get('overview', 
                         '–û–ø–∏—Å –≤—ñ–¥—Å—É—Ç–Ω—ñ–π.' if lang == 'uk' else 
                         '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.' if lang == 'ru' else 
                         'No overview available.')
    response = f"üì∫ <b>{title}</b> ({original_title})\n\n"
    response += f"üìÖ <b>{'–†—ñ–∫' if lang == 'uk' else '–ì–æ–¥' if lang == 'ru' else 'Year'}:</b> {year}\n"
    response += f"‚≠ê <b>{'–†–µ–π—Ç–∏–Ω–≥' if lang in ['uk', 'ru'] else 'Rating'}:</b> {rating}/10\n"
    response += f"üé≠ <b>{'–ñ–∞–Ω—Ä–∏' if lang in ['uk', 'ru'] else 'Genres'}:</b> {genres}\n\n"
    response += f"üìñ <b>{'–û–ø–∏—Å' if lang == 'uk' else '–û–ø–∏—Å–∞–Ω–∏–µ' if lang == 'ru' else 'Overview'}:</b>\n{overview}\n\n"
    return response

def format_similar_movies(movies, lang='uk'):
    """–§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Å—Ö–æ–∂–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤"""
    header = {
        'uk': "üé¨ –°—Ö–æ–∂—ñ —Ñ—ñ–ª—å–º–∏:\n\n",
        'ru': "üé¨ –ü–æ—Ö–æ–∂–∏–µ —Ñ–∏–ª—å–º—ã:\n\n",
        'en': "üé¨ Similar movies:\n\n"
    }.get(lang, "")
    items = []
    for movie in movies[:5]:
        title = movie.get('title', '–ù–µ–≤—ñ–¥–æ–º–æ')
        original_title = movie.get('original_title', title)
        year = movie.get('release_date', '')[:4] if movie.get('release_date') else '–ù–µ–≤—ñ–¥–æ–º–æ'
        rating = movie.get('vote_average', 0)
        item = f"üé¨ <b>{title}</b> ({original_title})\n"
        item += f"üìÖ {year} | ‚≠ê {rating}/10\n"
        item += f"üîó /movie_{movie['id']}\n"
        items.append(item)
    return header + "\n".join(items)

def format_similar_tv_shows(tv_shows, lang='uk'):
    """–§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Å—Ö–æ–∂–∏—Ö —Å–µ—Ä—ñ–∞–ª—ñ–≤"""
    header = {
        'uk': "üì∫ –°—Ö–æ–∂—ñ —Å–µ—Ä—ñ–∞–ª–∏:\n\n",
        'ru': "üì∫ –ü–æ—Ö–æ–∂–∏–µ —Å–µ—Ä–∏–∞–ª—ã:\n\n",
        'en': "üì∫ Similar TV shows:\n\n"
    }.get(lang, "")
    items = []
    for show in tv_shows[:5]:
        title = show.get('name', '–ù–µ–≤—ñ–¥–æ–º–æ')
        original_title = show.get('original_name', title)
        year = show.get('first_air_date', '')[:4] if show.get('first_air_date') else '–ù–µ–≤—ñ–¥–æ–º–æ'
        rating = show.get('vote_average', 0)
        item = f"üì∫ <b>{title}</b> ({original_title})\n"
        item += f"üìÖ {year} | ‚≠ê {rating}/10\n"
        item += f"üîó /tv_{show['id']}\n"
        items.append(item)
    return header + "\n".join(items)

def format_favorites(favorites, lang):
    """–§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –æ–±—Ä–∞–Ω–æ–≥–æ"""
    if not favorites:
        return {
            'uk': "–£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤.",
            'ru': "–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤.",
            'en': "You don't have any saved movies yet."
        }.get(lang, "–ù–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö")
    response = {
        'uk': "‚ù§Ô∏è –í–∞—à–µ –æ–±—Ä–∞–Ω–µ:\n\n",
        'ru': "‚ù§Ô∏è –í–∞—à–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:\n\n",
        'en': "‚ù§Ô∏è Your favorites:\n\n"
    }.get(lang, "‚ù§Ô∏è –í–∞—à–µ –æ–±—Ä–∞–Ω–µ:\n\n")
    for fav in favorites:
        item_id, item_type, title, original_title, year, rating, poster_path = fav
        if item_type == 'movie':
            response += f"üé¨ <b>{title}</b> ({original_title})\n"
        else:
            response += f"üì∫ <b>{title}</b> ({original_title})\n"
        response += f"üìÖ {year} | ‚≠ê {rating}/10\n"
        response += f"üîó /{item_type}_{item_id}\n\n"
    return response